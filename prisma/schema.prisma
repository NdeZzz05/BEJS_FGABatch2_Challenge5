// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  profile Profiles? 
  bank_accounts Bank_Accounts[]
}

model Profiles {
  id              String   @id @default(uuid())
  identity_type   IdentityType
  identity_number String @unique
  user_id         String @unique
  user            Users   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  address_id      String?
  address         Addresses? @relation(fields: [address_id], references: [id])
  job_id          String?
  job             Jobs?      @relation(fields: [job_id], references: [id])
}

model Addresses {
  id          String   @id @default(uuid())
  street      String
  city        String
  state       String
  postal_code String
  country     String
  profile     Profiles[]
}

model Jobs{
  id            String   @id @default(uuid())
  company_name  String
  position      String
  profile       Profiles[]
}

model Bank_Accounts{
  id                    String   @id @default(uuid())
  bank_name             String
  bank_account_number   String @unique
  pin                   String
  balance               Float
  user_id               String @unique
  user                  Users   @relation(fields: [user_id], references: [id])
  transactions_source   Transactions[] @relation("sourceAccount")
  transactions_target   Transactions[] @relation("targetAccount")
}

model Transactions{
  id                    String   @id @default(uuid())
  amount                Float
  date                  DateTime @default(now())              
  transaction_type_id   String
  transaction_type      Transaction_Type @relation(fields: [transaction_type_id], references: [id])
  source_account_id     String?
  sourceAccount         Bank_Accounts? @relation("sourceAccount", fields: [source_account_id], references: [id])
  destination_account_id String?
  destinationAccount    Bank_Accounts? @relation("targetAccount", fields: [destination_account_id], references: [id])
}

model Transaction_Type{
  id   String   @id @default(uuid())
  name String
  transaction Transactions[]
}

enum IdentityType {
  KTP
  SIM
  PASSPORT
  STUDENT_CARD
}